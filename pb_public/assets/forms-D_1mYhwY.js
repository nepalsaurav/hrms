import{c as S,a as c,b as k}from"./index.esm-DyswK6GF.js";import{r as s,l as b,m as g,x as q,o as m,c as f,a as y,F as E,f as T,t as B,B as j,C as M,A as O,g as h,D as A}from"./index-DhUzF4e6.js";import{b as C}from"./utils-RVpx9FsL.js";const R=["name"],V=["value","selected"],K={__name:"LeaveHalfDay",props:{form:Object,defaultValue:{default:""}},setup(t){const a=s(null),l=s(null),r=t,o=s([{label:"Select type",value:""},{label:"First-Half",value:"First-Half"},{label:"Second-Half",value:"Second-Half"}]),{formModel:u}=b();return g(u,(n,p)=>{l.value&&(n.is_half?l.value.style.display="block":l.value.style.display="none")},{immediate:!0}),q(()=>{l.value=a.value.parentElement.parentElement.parentElement,l.value.style.display="none"}),(n,p)=>(m(),f("div",{class:"select",ref_key:"el",ref:a},[y("select",{name:t.form.name},[(m(!0),f(E,null,T(o.value,i=>(m(),f("option",{value:i.value,selected:i.value===r.defaultValue},B(i.label),9,V))),256))],8,R)],512))}},N={class:"is-flex"},z=["value"],I=["value"],J={__name:"CountLeaveDays",setup(t){const a=s(0),l=s(""),r=s(""),o=s(null),u=s(0),n=s(null),p=s(null),{formModel:i}=b(),D=j(()=>u.value-a.value),v=JSON.parse(M("employee").value);return O(()=>{var e,d;(async()=>{var _;if(n.value&&!p.value){const F=await h.collection("leave").getFullList({filter:`employee='${n.value}'`,requestKey:null}),L=A(F,o.value.fy_year.from_date.value,o.value.fy_year.to_date.value),x=((_=v==null?void 0:v.expand)==null?void 0:_.leave_type).reduce(($,H)=>$+H.allowed_paid_leave,0);u.value=x-L}})(),l.value!==""&&r.value!==""&&(a.value=C(l.value,r.value,(d=(e=o.value)==null?void 0:e.weekly_off)==null?void 0:d.value))}),g(i,(e,d)=>{n.value=e==null?void 0:e.employee[0],l.value=e==null?void 0:e.leave_from,r.value=e==null?void 0:e.leave_to}),q(async()=>{const e=await h.send("/api/get_settings/settings.json",{requestKey:null});o.value=e}),(e,d)=>(m(),f("div",N,[y("input",{type:"text",class:"input is-small",value:a.value,disabled:""},null,8,z),y("input",{type:"text",class:"input ml-4 is-small",value:D.value,disabled:""},null,8,I)]))}},Q=[{name:"employee",label:"Employee",collection:"employee",labelField:"full_name",firstOption:"select employee",type:"relational_field_select",isCombinedField:!0,combinedFields:["first_name","middle_name","last_name"],required:!0},{name:"leave_from",label:"Leave From",type:"date",required:!0,placeholder:"1900-01-01"},{name:"leave_to",label:"Leave To",type:"date",required:!0,placeholder:"1900-01-01"},{name:"leave_days",label:"Leave Day/ Balance Leave",type:"custom_component",component:J},{name:"leave_type",label:"Leave Type",collection:"leave_type",labelField:"name",firstOption:"select leave type",type:"relational_field_select",required:!0},{name:"is_half",label:"Half Day",type:"bool"},{name:"half_day_type",label:"Half Day Type",type:"custom_component",component:K},{name:"status",label:"Status",type:"select",required:!1,options:[{label:"Pending",value:"pending"},{label:"Accepted",value:"accepted"},{label:"Rejected",value:"rejected"}]},{name:"file",label:"File",type:"file",required:!1},{name:"reasons",label:"Reasons",type:"rich_text",required:!0}],X=S().shape({employee:c().required("employee is a required field"),reasons:c().required("reasons is a requred field"),leave_from:c().matches(/^\d{4}-\d{2}-\d{2}$/,"Date must be in the format yyyy-mm-dd").required("leave_from is a required field"),leave_to:c().matches(/^\d{4}-\d{2}-\d{2}$/,"Date must be in the format yyyy-mm-dd").required("leave_to is a required field").test("is-greater","leave_to must be equal or greater than leave_from",function(t){const{leave_from:a}=this.parent;return!a||!t||new Date(t)>=new Date(a)}),is_half:k().test("is-half-logic","is_half must be false if leave_to is greater than leave_from",function(t){const{leave_from:a,leave_to:l}=this.parent;return a&&l&&new Date(l)>new Date(a)?t===!1:!0}),half_day_type:c().test("half_day_type","Half day type is required when 'is_half' is selected",function(t){const{is_half:a}=this.parent;return!(a&&t===void 0)})});export{Q as f,X as v};
