import{r as S,B as K,A as G,x as W,g as E,J as Z,K as H,o as r,c as i,p as U,L as I,d as D,a,t as c,F as q,f as R,e as P,m as J,b as Y,I as z,q as Q,M as X,N as B,u as ee,k as ae}from"./index-DhUzF4e6.js";import{B as te}from"./BreadCrumb-QusY3eB5.js";import{d as se,e as le,i as oe,f as ne,h as re,j as ue}from"./utils-RVpx9FsL.js";import{S as T}from"./sweetalert2.esm.all-CIewtpap.js";import"./index.esm-DyswK6GF.js";const ie={class:"card"},ce={class:"card-content"},de={class:"columns is-multiline mb-1"},ye={class:"column is-3"},me={class:"has-text-grey"},_e={class:"column is-3"},ve={class:"has-text-grey"},pe={class:"column is-3"},fe={class:"has-text-grey"},he={class:"column is-3"},ge={class:"has-text-grey"},be={class:"column is-3"},xe={class:"has-text-grey"},Se={class:"column is-3"},ke={class:"has-text-grey"},qe={class:"column is-3"},De={class:"has-text-grey"},Le={class:"column is-3"},we={class:"has-text-grey"},Ae={class:"column is-3"},Fe={class:"has-text-grey"},Ee={class:"column is-3"},Ne={class:"has-text-grey"},je={key:0,class:"columns is-multiline"},$e={key:0,class:"column is-4"},Be=["for"],Re=["id","value"],Oe={class:"column is-4"},Ue=["value"],Ce={key:0,class:"column is-4"},Ke=["for"],Pe=["id","value"],Te={class:"column is-4"},Ie=["value"],Me={key:1},Ve={class:"has-text-danger"},Ge={__name:"SinglePayroll",props:{employee:String,query:Object,settings:Object},emits:["update"],setup(C,{emit:f}){const n=C,L=f,k=S(!0),h=S([]),l=S([]),w=S(null),m=S({}),A=K(()=>l.value.filter(t=>t.type==="Earning").reduce((t,e)=>t+e.amount,0)),j=K(()=>A.value-l.value.filter(t=>t.type==="Deduction").reduce((t,e)=>t+e.amount,0));G(()=>{if(m.value.unpaid&&m.value.unpaid>0&&A.value>0){const t=A.value/se(n.query.from_date,n.query.to_date)*m.value.unpaid,e=l.value.findIndex(d=>d.name==="Unpaid Leave Deduction"),s={name:"Unpaid Leave Deduction",amount:parseFloat(t.toFixed(2)),type:"Deduction"};e!==-1?l.value[e]=s:l.value.push(s)}L("update",{employee:n.employee,value:{component:l.value,grossSalary:A.value,netSalary:j.value}})}),W(async()=>{var t;k.value=!0,h.value=[],l.value=[];try{const e=await E.collection("employee").getOne(n.employee,{expand:"leave_type,salary_structure",requestKey:null});w.value=e;let s=e;e.expand.leave_type||h.value.push("Leave type is not assigned to employee.");const[d,v]=await Promise.all([E.collection("attendance").getFullList({filter:`employee='${n.employee}' && '${n.query.from_date} 00:00:00.000Z' <= date && '${n.query.to_date} 00:00:00.000Z' >= date`,requestKey:null}),E.collection("leave").getFullList({filter:`employee='${n.employee}'`,requestKey:null})]),_=le(n.query.from_date,n.query.to_date);let[p,g,o,F]=[0,0,0,0];for(const b of _){if(oe(b,n.settings.weekly_off.value))continue;if(w.value.is_attendance_exception){g++,p++;continue}const y=d.find(x=>x.date.split(" ")[0]===b);if(y)if(y.status==="present")g++;else{const x=Z(v,b);x.leave&&(x.leave.is_half&&(g+=.5),x.leave.status==="accepted"&&(o+=x.leaveDays))}y.status==="holiday"&&F++,y.status!=="holiday"&&p++}const $=((t=e.expand.leave_type)==null?void 0:t.reduce((b,y)=>b+(y.allowed_paid_leave||0),0))||0,u=p-g,M=H(v,n.query,n.settings,$,u,o);if(m.value={holiday:F,workingDays:p,present:g,absentDays:u,acceptedLeave:o,unpaid:M},!e.expand.salary_structure){h.value.push("Salary structure is not assigned to employee.");return}const V=e.expand.salary_structure.components;for(const b of V){const y=await E.collection("salary_component").getOne(b.component,{requestKey:null}),x=b.calculated?ne(y.formula,s):b.amount;if(s[y.abbreviation]=x,!y.do_not_include_in_total){let N=parseFloat(x.toFixed(2));y.round_to_the_nearest_integer&&N>0&&(N=re(N,n.settings.round_off.ceiling_rounding.value)),N>0&&l.value.push({name:b.name,amount:N,actualAmount:parseFloat(x.toFixed(2)),type:y.type,component:y})}}}catch(e){let s=e.toString();switch(s){case"TypeError: attendance is undefined":s="Attendance record for employee not found. You may also ignore attendance from employee record for salary calculation."}h.value.push(s)}finally{k.value=!1}});function O(t){return[t==null?void 0:t.first_name,t==null?void 0:t.middle_name,t==null?void 0:t.last_name].filter(s=>s!=="").join(" ")}return(t,e)=>{var s,d,v,_,p,g,o,F,$;return r(),i(q,null,[k.value?(r(),U(I,{key:0})):D("",!0),a("div",ie,[a("div",ce,[a("div",de,[a("div",ye,[a("small",me," Employee: "+c(O(w.value)),1)]),a("div",_e,[a("small",ve," Salary Structure: "+c((v=(d=(s=w.value)==null?void 0:s.expand)==null?void 0:d.salary_structure)==null?void 0:v.name),1)]),a("div",pe,[a("small",fe," From: "+c(n.query.from_date),1)]),a("div",he,[a("small",ge," To: "+c(n.query.to_date),1)]),a("div",be,[a("small",xe," Working Days: "+c((_=m.value)==null?void 0:_.workingDays),1)]),a("div",Se,[a("small",ke," Present: "+c((p=m.value)==null?void 0:p.present),1)]),a("div",qe,[a("small",De," Holiday: "+c((g=m.value)==null?void 0:g.holiday),1)]),a("div",Le,[a("small",we," Absent: "+c((o=m.value)==null?void 0:o.absentDays),1)]),a("div",Ae,[a("small",Fe," Accepted Leave: "+c((F=m.value)==null?void 0:F.acceptedLeave),1)]),a("div",Ee,[a("small",Ne," Unpaid Leave: "+c(($=m.value)==null?void 0:$.unpaid),1)])]),l.value.length>0?(r(),i("div",je,[(r(!0),i(q,null,R(l.value,u=>(r(),i(q,null,[u.type==="Earning"?(r(),i("div",$e,[a("label",{for:u.name,class:"label is-small"},[P(c(u.name)+" ",1),e[0]||(e[0]=a("i",{class:"bi bi-plus-circle-fill"},null,-1))],8,Be),a("input",{id:u.name,type:"text",class:"input is-small",value:u.amount},null,8,Re)])):D("",!0)],64))),256)),a("div",Oe,[e[1]||(e[1]=a("label",{for:"gross_salary",class:"label is-small"},"Gross Salary",-1)),a("input",{id:"gross_salary",type:"text",class:"input is-small",value:A.value},null,8,Ue)]),(r(!0),i(q,null,R(l.value,u=>(r(),i(q,null,[u.type==="Deduction"?(r(),i("div",Ce,[a("label",{for:u.name,class:"label is-small"},[P(c(u.name)+" ",1),e[2]||(e[2]=a("i",{class:"bi bi-dash-circle-fill"},null,-1))],8,Ke),a("input",{id:u.name,type:"text",class:"input is-small",value:u.amount},null,8,Pe)])):D("",!0)],64))),256)),a("div",Te,[e[3]||(e[3]=a("label",{for:"gross_salary",class:"label is-small"},"Net Salary",-1)),a("input",{id:"gross_salary",type:"text",class:"input is-small",value:j.value},null,8,Ie)])])):D("",!0),h.value.length>0?(r(),i("ul",Me,[(r(!0),i(q,null,R(h.value,u=>(r(),i("li",null,[a("small",Ve,c(u),1)]))),256))])):D("",!0)])])],64)}}},We=["disabled"],Ze={key:2},Xe={__name:"Add",setup(C){const f=Q(),n=ae(),L=S(null),k=S(null),h=S(!1),l=S({}),w=S([]);async function m(){L.value=k.value=null;try{if(f.query.employee!=="undefined")l.value[f.query.employee]=null;else{const e=await E.collection("employee").getFullList();w.value=e,e.forEach(s=>{l.value[s.id]=null})}const t=await E.send("/api/get_settings/settings.json");L.value=t}catch(t){console.log(t),k.value=t.data.message}}J(f.query,m,{immediate:!0});function A(t){t.value.component.length>0&&(l.value[t.employee]=t.value)}async function j(){h.value=!0;const t=E.createBatch();for(const[e,s]of Object.entries(l.value)){const d={employee:e,from_date:f.query.from_date,to_date:f.query.to_date,details:s};t.collection("payroll").create(d)}try{const e=await t.send();console.log(e),T.fire({title:"success!",text:"successfully created payroll",icon:"success"}),n.push("/payroll/payroll_list")}catch(e){T.fire({title:"error!",text:e.data.message,icon:"error"})}finally{h.value=!1}}async function O(t){const e=new Set(["Employee"]);for(const[d,v]of Object.entries(l.value))v.component.forEach(_=>{e.add(_.name)});e.add("Gross Salary"),e.add("Net Salary");const s=[];s.push([...e]);for(const[d,v]of Object.entries(l.value)){const _=[],p=X(w.value,o=>o.id===d),g=[p.value.first_name,p.value.middle_name,p.value.last_name].filter(o=>o!=="").join(" ");_[B(Array.from(e),o=>o==="Employee").value]=g,v.component.forEach(o=>{_[B(Array.from(e),F=>F===o.name).value]=o.amount.toLocaleString()}),_[B(Array.from(e),o=>o==="Gross Salary").value]=v.grossSalary.toLocaleString(),_[B(Array.from(e),o=>o==="Net Salary").value]=v.netSalary.toLocaleString(),s.push(_)}ue(s,`payroll_from_${f.query.from_date}_to_${f.query.to_date}`),console.log(s)}return(t,e)=>(r(),i(q,null,[Y(te,{links:[{path:"/",label:"Dashboard",isActive:!1},{path:"/payroll/payroll_list",label:"Payroll",isActive:!1},{path:"/payroll/add",label:"Add",isActive:!0}]}),L.value===null?(r(),U(I,{key:0})):D("",!0),L.value!==null?(r(),i("form",{key:1,onSubmit:z(j,["prevent"])},[a("fieldset",{disabled:h.value},[a("div",{class:"is-flex is-flex-direction-row-reverse"},[e[0]||(e[0]=a("button",{type:"submit",class:"button is-dark mb-2"}," Save ",-1)),a("button",{type:"button",class:"button is-light mb-2 mr-2",onClick:O}," Excel ")]),(r(!0),i(q,null,R(l.value,(s,d)=>(r(),U(Ge,{employee:d,query:ee(f).query,settings:L.value,onUpdate:A},null,8,["employee","query","settings"]))),256))],8,We)],32)):D("",!0),k.value!==null?(r(),i("p",Ze,c(k.value),1)):D("",!0)],64))}};export{Xe as default};
